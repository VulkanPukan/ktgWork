@{
    ViewBag.Title = "Strength Tracker | Create Program";
    Layout = "~/Views/Admin/_LayoutNew.cshtml";
}

<style>
    .navbar-top .navbar-header {
        width: 250px !important;
        text-align: center;
    }
    #dvSiteFooter {
        top: 70px !important;
    }
    .row {
        margin-left: -30px;
        margin-right: -30px;
    }
    .breadcrumbs2 .active a {
        color: #ffffff;
        background-color:#3a86c8;
    }
    .breadcrumbs2 .active a:after {
        border-left-color: #3a86c8;
    }
    .breadcrumbs2 .active a:before {
        border-color: #3a86c8 #3a86c8 #3a86c8 transparent;
    }
    .breadcrumbs2 > li:last-child a {
        color: #2a303e;
    }
</style>
<link rel="stylesheet" href="../content/kendo.common.min.css" />
<link rel="stylesheet" href="../content/kendo.silver.min.css">
    @*<div class="dashboard-wrapper">*@
        <div class="top-bar clearfix">
            <!-- Container fluid starts -->
			<div class="container-fluid">
                <!-- Row starts -->
                <div class="row gutter">
                    <div class="col-md-8 col-sm-6 col-xs-12">
					    <h3 class="page-title">Create Program - Add Structure</h3>
					</div>
                </div>
                <!-- Row ends -->
            </div>
            <!-- Container fluid ends -->
        </div>
        <!-- Top Bar ends -->
        <!-- Main container starts -->
        <div class="main-container">
            <ul class="breadcrumbs2" style="margin-bottom:20px;">
            <li><a href="@Url.Action("Program", "Admin")"><span class="icon-home2"></span></a></li>
            <li class="active">
                <a href="JavaScript:void(0);" data-toggle="tab">Create Program - Add Structure</a>
            </li>
            <li class="">
                <a href="JavaScript:void(0);" onclick="ChangeTabs('AddExerciseToProgram');" data-toggle="tab">Create Program - Add Exercise</a>
            </li>
            <li class="">
                <a href="JavaScript:void(0);" onclick="ChangeTabs('ProgramExercises');" data-toggle="tab">Create Program - View Program</a>
            </li>
            <li class="">
                <a href="JavaScript:void(0);" onclick="ChangeTabs('ProgramDWSession');" data-toggle="tab">Create Program - DW Session</a>
            </li>
        </ul>
            <div class="required pull-right">* Required fields</div>
        <div class="row gutter">
            <div class="col-lg-12">
                <div class="panel-default">
                    <div class="panel-body">
                        <form role="form" class="form-wizard">
                           <div class="well">
                              <!-- START row -->
                              <div class="row">
                                 <div class="col-md-3">
                                    <div class="form-group">
                                       <label>Sport*</label>
                                       <div class="controls">
                                           @Html.DropDownList("lstSport", new System.Web.Mvc.SelectList(ViewBag.SportsList, "Id", "Name"), "Select Sport", new { @class="form-control m-b", @onchange="PopulatePositions();" })
                                       </div>
                                    </div>
                                 </div>
                                 <div class="col-md-3">
                                    <div class="form-group">
                                       <label>Position*</label>
                                       <div class="controls">
                                            @*<select name="position" class="form-control m-b">
                                                <option>Position 1</option>
                                                <option>Position 2</option>
                                            </select>*@
                                          @*<input type="text" name="Position" data-parsley-group="step1" placeholder="Position" required="" class="form-control" data-parsley-id="9600">*@<ul class="parsley-errors-list" id="parsley-id-9600"></ul>
                                           @Html.DropDownList("lstPosition", new System.Web.Mvc.SelectList(ViewBag.PositionList, "Id", "Name"), "Select Position", new { @class="form-control m-b" })
                                       </div>
                                    </div>
                                 </div>
                                 <div class="col-md-3">
                                    <div class="form-group">
                                       <label>Training Season*</label>
                                       <div class="controls">
                                           @Html.DropDownList("lstTrainingSeason", new List<SelectListItem>() { new SelectListItem { Text = "Select Season", Selected = true }, new SelectListItem { Text = "In Season", Value = "1"@*, Selected = true*@ }, new SelectListItem { Text = "Off Season", Value = "2"@*, Selected = true*@ } }, new { @class="form-control m-b" })
                                       </div>
                                    </div>
                                 </div>
                                  <div class="col-md-3">
                                    <div class="form-group">
                                       <label>Training Phase*</label>
                                       <div class="controls">
                                          @*<input type="text" id="txtTraningPhase" name="Season" data-parsley-group="step1" placeholder="Training Phase" required="required" class="form-control" data-parsley-id="3212"><ul class="parsley-errors-list" id="parsley-id-3212"></ul>*@
                                           <select id="lstTrainingPhase" onchange="ChangeTrainingPhase();" class="form-control m-b">
                                               <option value="0" selected="selected">Select Training Phase</option>
                                               <option value="Anatomical Adaptation">Anatomical Adaptation</option>
                                               <option value="Hypertrophy">Hypertrophy</option>
                                               <option value="Strength">Maximum Strength</option>
                                               <option value="Power">Conversion to Power</option>
                                               <option value="Muscular Endurance">Conversion to Muscular Endurance</option>
                                               <option value="Other">Add New Training Phase</option>
                                           </select>
                                           <br />
                                           <input type="text" id="txtOtherTrainingPhase" class="form-control" style="display:none;" />
                                       </div>
                                    </div>
                                 </div>
                              </div>
                              <!-- END row -->
                              <!-- START row -->
                              <div class="row">
                                 <div class="col-md-3">
                                    <div class="form-group">
                                       <label>Program Name*</label>
                                       <div class="controls">
                                            <div class="controls" id="dvForProgramNameErr">
                                          <input type="text" name="ProgramName" id="txtProgramName" data-parsley-group="step1" placeholder="Program Name" required="required" class="form-control" data-parsley-id="9600"><ul class="parsley-errors-list" id="parsley-id-9600"></ul>
                                       </div>
                                       </div>
                                    </div>
                                    </div>
                                 <div class="col-md-9">
                                    <div class="form-group">
                                       <label>Description</label>
                                       <div class="controls">
                                          <textarea class="form-control" id="txtProgramDesc" placeholder="Description"></textarea>
                                       </div>
                                    </div>
                                 </div>
                              </div>
                              <!-- END row --> 
                               <!-- START row -->
                              <div class="row">
                                  <div class="col-md-3">
                                    <div class="form-group">
                                       <label># Session/Week*</label>
                                       <div class="controls">
                                          <input type="text" name="SessionperWeek" id="txtSessionPerWeek" data-parsley-group="step1" placeholder="Session/Week" required="required" class="form-control" data-parsley-id="9600" />
                                       </div>
                                    </div>
                                 </div>
                                  <div class="col-md-3">
                                    <div class="form-group">
                                       <label># of Sessions*</label>
                                       <div class="controls">
                                          <input type="text" name="NumOfSession" id="txtNumofSessions" data-parsley-group="step1" placeholder="# of Sessions" required="required" class="form-control" data-parsley-id="3212">
                                       </div>
                                    </div>
                                 </div>
                                 <div class="col-md-3">
                                    <div class="form-group">
                                       <label># of Steps*</label>
                                       <div class="controls">
                                            <input type="text" name="NumOfSteps" id="txtTotalSteps" data-parsley-group="step1" placeholder="# of Steps" required="required" class="form-control" data-parsley-id="9600">
                                       </div>
                                    </div>
                                 </div>
                                  <div class="col-md-3">
                                    <div class="form-group">
                                       <label># of Groups*</label>
                                       <div class="controls">
                                          <input type="text" name="NumOfGroups" id="txtNumofGroups" data-parsley-group="step1" placeholder="# of Groups" required="required" class="form-control" data-parsley-id="3212"><ul class="parsley-errors-list" id="parsley-id-3212"></ul>
                                       </div>
                                    </div>
                                 </div>
                              </div>
                               <!-- END row --> 
                               <!-- START row -->
                              <div class="row">
                                  <div class="col-md-3">
                                    <div class="form-group">
                                       <label>Time to Perform Foam Rollout*</label>
                                       <div class="controls">
                                           <input type="text" id="txtFoamRollOut" placeholder="Foam Rollout" required="required" value="5" class="form-control" />
                                       </div>
                                    </div>
                                 </div>
                                  <div class="col-md-4">
                                    <div class="form-group">
                                       <label>Time to Perform Dynamic Warm-up*</label>
                                       <div class="controls">
                                           <input type="text" id="txtDynamicWarmUp" placeholder="Dynamic Warm-up" required="required" value="8" class="form-control" />
                                       </div>
                                    </div>
                                 </div>
                              </div>
                              <!-- END row -->
                              <!-- START row -->
                               <div class="row">
                                   <div class="col-md-12">
                                    <div class="form-group">
                                       <label></label>
                                       <div class="controls">
                                       </div>
                                    </div>
                                 </div>
                               </div>
                              <!-- END row -->
                               <!-- START row -->
                              <div class="row" id="ExerciseLabelRow">
                                 <div class="col-md-12">
                                    <div class="form-group">
                                       <label>Exercise Group Schedule</label><hr />
                                       <div class="controls">
                                       </div>
                                    </div>
                                 </div>
                              </div>
                              <!-- END row -->
                              <!-- START row -->
                               <div class="row" id="exerciseScheduleRow">
                               </div>
                              <!-- END row -->
                              <!-- START row -->
                               <div class="row">
                                    <div class="col-md-12">
                                        <div class="pull-right">
                                            <button type="button" id="btnGotoExerciseLink" class="mb-sm btn" disabled="disabled">Back</button>
                                            <button type="button" id="btnSaveProgramInfo" onclick="SaveProgramInfo();" class="mb-sm btn btn-success">Save</button>
                                            <button type="button" id="btnGotoNext" onclick="ChangeTabs('AddExerciseToProgram');" class="mb-sm btn btn-info">Next</button>
                                        </div>
                                    </div>
                                </div>
                              <!-- END row -->
                           </div>
                        </form>  
                    </div>
                </div>
            </div>
        </div>
        </div>
        <!-- Main container ends -->
    @*</div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    <script type="text/javascript" charset="utf-8">
        $("#liProgram").addClass("active");
        function SaveExerciseToDailyworkout() {
            var pID = getUrlVars()["programID"];
            var isTKGProgram = getUrlVars()["p"];
            window.location = "@Url.Action("ProgramExercises", "Admin")?programID=" + pID + "&p=" + isTKGProgram;
        }
        $(function () {
            var programID = getUrlVars()["programID"];
            var isTKGProgram = getUrlVars()["p"];
            if (isTKGProgram === "true") {
                $("#btnSaveProgramInfo").hide();
                //$("#btnManageProgramInfo").hide();
            }
            else {
                $("#btnSaveProgramInfo").show();
            }
            if (programID == undefined) {
                programID = 0;
                $("#btnGotoExerciseLink").attr("disabled", "disabled");
            }
            else {
                $("#btnGotoExerciseLink").removeAttr("disabled", "");
            }
            $.ajax({
                url: "@Url.Action("GetProgramByID", "Admin")",
                type: "POST",
                data: { 'programID': programID },
                dataType: "json",
                success: function (result) {
                    if (result != null) {
                        if (result.Programs == null) {
                            $("#ExerciseLabelRow").hide();
                            $("#exerciseScheduleRow").hide();
                            return false;
                        }
                        if (result.Programs[0].IsActive == true) {
                            //alert("Active Programs are ‘view only’.  Please Deactivate this Program to edit it.  If an Athlete is using the Program, copy and rename the Program then edit the renamed Program");
                            $("#btnSaveProgramInfo").attr("disabled", true);
                        }
                        else {
                            $("#btnSaveProgramInfo").attr("disabled", false);
                        }
                        $("#txtProgramName").val(result.Programs[0].Title);
                        $("#txtProgramDesc").val(result.Programs[0].Description);
                        $("#txtProgramObjective").val(result.Programs[0].Description);
                        $("#txtTotalSteps").val(result.Programs[0].Steps);
                        $("#txtSessionPerWeek").val(result.Programs[0].SessionsperWeeks);
                        $("#txtNumofSessions").val(result.Programs[0].TotalSessions);
                        $("#txtNumofGroups").val(result.Programs[0].TotalGroups);
                        $("#lstSport").val(result.Programs[0].SportID);
                        $("#lstPosition").val(result.Programs[0].PositionID);
                        $("#txtProgramObjective").val(result.Programs[0].Objective);
                        //$("#txtTraningPhase").val(result.Programs[0].TrainingPhase);
                        var ctrlTrainingPhaseVal = result.Programs[0].TrainingPhase;
                        if (ctrlTrainingPhaseVal !== "Hypertrophy"
                            && ctrlTrainingPhaseVal !== "Strength"
                            && ctrlTrainingPhaseVal !== "Power"
                            && ctrlTrainingPhaseVal !== "Muscular Endurance") {
                            $("#lstTrainingPhase").val("Other");
                            $("#txtOtherTrainingPhase").show();
                            $("#txtOtherTrainingPhase").val(result.Programs[0].TrainingPhase);
                        }
                        else {
                            $("#txtOtherTrainingPhase").hide();
                            $("#lstTrainingPhase").val(result.Programs[0].TrainingPhase);
                        }
                        $("#lstTrainingSeason").val(result.Programs[0].TrainingSeasonID);
                        $("#txtFoamRollOut").val(result.Programs[0].FoamRollOut);
                        $("#txtDynamicWarmUp").val(result.Programs[0].DynamicWarmup);

                        var thirdDiv = '<div class="controls">';
                        $("#exerciseScheduleRow").empty();
                        for (var ctrRow = 1; ctrRow <= result.SpecialSchedules.length ; ctrRow++) {
                             
                            var rawStr = '';
                            var firstDiv = '<div class="col-md-1" id="firstDiv' + ctrRow + '">';
                            var divEnd = "</div>";
                            var selectEnd = "</select>";
                            var secondDiv = '<div class="form-group" id="secondDiv' + ctrRow + '">';
                            rawStr = rawStr + firstDiv + secondDiv;
                            var lblSessionNum = "<label>" + ctrRow + "</label>";
                            rawStr = rawStr + lblSessionNum;
                            rawStr = rawStr + thirdDiv;
                            var sessionSelect = '<select name="ExerciseSchedule" id="sessionSelect' + ctrRow + '" >';
                            rawStr = rawStr + sessionSelect;

                            var optionSelect = '';
                            for (var stepNum = 1; stepNum <= result.Programs[0].Steps ; stepNum++) {
                                for (var groupNum = 1; groupNum <= result.Programs[0].TotalGroups ; groupNum++) {
                                    optionSelect = optionSelect + '<option value=' + ctrRow + ":" + stepNum + ':' + groupNum + ":" + result.SpecialSchedules[ctrRow - 1].ID + '>' + stepNum + String.fromCharCode(64 + groupNum) + '</option>';
                                }
                            }
                            optionSelect = optionSelect + '<option value=' + ctrRow + ':Assessment' + ':' + result.SpecialSchedules[ctrRow - 1].ID + '>A/S</option>';
                            rawStr = rawStr + optionSelect;
                            rawStr = rawStr + selectEnd + divEnd + divEnd + divEnd;

                            $("#exerciseScheduleRow").append(rawStr);
                        }
                        for (var rowCtr = 1; rowCtr <= result.SpecialSchedules.length ; rowCtr++) {
                            if (result.SpecialSchedules[rowCtr - 1] != undefined) {
                                if (result.SpecialSchedules[rowCtr - 1].IsAssessmentStep == true) {
                                    $("#sessionSelect" + rowCtr).val(rowCtr + ":Assessment:" + result.SpecialSchedules[rowCtr - 1].ID);
                                }
                                else {
                                    var valStr = rowCtr + ":" + result.SpecialSchedules[rowCtr - 1].Step + ":" + result.SpecialSchedules[rowCtr - 1].Group + ":" + result.SpecialSchedules[rowCtr - 1].ID;
                                    $("#sessionSelect" + rowCtr).val(valStr);
                                }
                            }
                        }

                    }
                },
                error: function (req, status, errorObj) {
                    alert("Error: Please try again later");
                }
            });
            $("input[type='text']").blur(function (e) {
                if (this.required == true) {
                    if (this.value === "") {
                        $(this.parentElement).addClass("has-error");
                    }
                    else {
                        $(this.parentElement).removeClass("has-error");
                    }
                }
            });
        });
        function SaveProgramInfo() {
            var isFormValidated = true;
            $(":text").each(function () {
                if (this.required == true) {
                    if (this.value === "" || !this.value) {
                        $(this.parentElement).addClass("has-error");
                        alert(this.placeholder + " is a required field");
                        $(this).focus();
                        isFormValidated = false;
                        return false;
                    }
                }
            });
            if (isFormValidated == true) {
                if ($("#lstTrainingPhase").val() === "0") {
                    alert("Training Phase is a required field");
                    $("#lstTrainingPhase").focus();
                    isFormValidated = false;
                    return false;
                }
            }
            if (isFormValidated != true) {
                return false;
            }
            //if ($("#txtProgramName").val() === "") {
            //    $("#txtProgramName").focus();
            //    $("#txtProgramName").parent().addClass("has-error");
            //    alert("Program Name is Required");
            //    return false;
            //}
            var programID = getUrlVars()["programID"];
            var isTKGProgram = getUrlVars()["p"];
            var arrSpecialSchdSessions = [];
            $('select[id^="sessionSelect"]').each(function () {
                if (/Assessment/i.test($("#" + this.id).val())) {

                }
                else {
                    if (!$("#" + this.id).val())
                        return;
                    var specialSchdInfo = {
                        'ID': $("#" + this.id).val().split(":")[3],
                        'ProgramID': programID,
                        'SessionNum': $("#" + this.id).val().split(":")[0],
                        'Step': $("#" + this.id).val().split(":")[1],
                        'Group': $("#" + this.id).val().split(":")[2],
                    };
                    arrSpecialSchdSessions.push(specialSchdInfo);
                }
            });
            var trainingPhase = "Other";
            if ($("#lstTrainingPhase").val() === "Other") {
                trainingPhase = $("#txtOtherTrainingPhase").val();
            }
            else {
                trainingPhase = $("#lstTrainingPhase").val();
            }
            var programInfo = {
                'Id': programID,
                'Title': $("#txtProgramName").val(),
                'Description': $("#txtProgramDesc").val(),
                'Steps': $("#txtTotalSteps").val(),
                'TotalGroups': $("#txtNumofGroups").val(),
                'SessionPerGroup': $("#txtEditSessionperGroup").val(),
                'TotalSessions': $("#txtNumofSessions").val(),
                'SessionsperWeeks': $("#txtSessionPerWeek").val(),
                'SportID': $("#lstSport").val(),
                'PositionID': $("#lstPosition").val(),
                'TrainingSeasonID': $("#lstTrainingSeason").val(),
                'Objective': $("#txtProgramObjective").val(),
                //'TrainingPhase': $("#txtTraningPhase").val(),
                'TrainingPhase': trainingPhase,
                'FoamRollOut': $("#txtFoamRollOut").val(),
                'DynamicWarmup': $("#txtDynamicWarmUp").val()
                //'SpecialSchduleSessions': arrSpecialSchdSessions
            };

            $.ajax({
                url: '@Url.Action("SaveProgramInfo", "Admin")',
                type: "POST",
                data: JSON.stringify({ 'program': programInfo, 'ProgramSchedule': arrSpecialSchdSessions }),
                contentType: 'application/json',
                dataType: "json",
                success: function (result) {
                    var pID = result.RedirectLocation.split("=")[1];
                    window.location = "../Admin/ManageProgram?programID=" + pID + "&p=" + isTKGProgram;
                },
                error: function (req, status, errorObj) {
                    alert('Error: Please try again');
                }
            });
        }
        function PopulatePositions() {
            var sportID = $("#lstSport").val();
            if (!sportID)
                return;
            $.ajax({
                url: '../Admin/ListPositionsBySportID',
                type: "POST",
                data: JSON.stringify({ 'sportID': sportID }),
                contentType: 'application/json',
                dataType: "json",
                success: function (result) {
                    if (result.length > 0) {
                        $("#lstPosition").empty();
                        $("#lstPosition").append('<option value">Select Position</option>');

                        for (var i = 0; i <= result.length-1; i++) {
                            $("#lstPosition").append('<option value="' + result[i].ID + '">' + result[i].Name + '</option>');
                        }
                    }
                },
                error: function (req, status, errorObj) {
                    alert('Error: Please try again');
                }
            });
        }
        function ChangeTrainingPhase() {
            if ($("#lstTrainingPhase").val() === "Other") {
                $("#txtOtherTrainingPhase").show();
            }
            else {
                $("#txtOtherTrainingPhase").hide();
            }
        }
    </script>
}